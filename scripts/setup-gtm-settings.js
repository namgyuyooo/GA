const { PrismaClient } = require('@prisma/client')
require('dotenv').config({ path: '.env.local' })

const prisma = new PrismaClient()

async function setupGTMSettings() {
  try {
    console.log('üöÄ GTM ÏÑ§Ï†ïÏùÑ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§Ïóê Ï∂îÍ∞Ä Ï§ë...')

    // GTM Account ID Ï∂îÍ∞Ä
    await prisma.setting.upsert({
      where: { key: 'GTM_ACCOUNT_ID' },
      update: { value: process.env.GTM_ACCOUNT_ID || '6016627088' },
      create: { key: 'GTM_ACCOUNT_ID', value: process.env.GTM_ACCOUNT_ID || '6016627088' }
    })

    // GTM Public ID Ï∂îÍ∞Ä
    await prisma.setting.upsert({
      where: { key: 'GTM_PUBLIC_ID' },
      update: { value: process.env.GTM_PUBLIC_ID || 'GTM-N99ZMP6T' },
      create: { key: 'GTM_PUBLIC_ID', value: process.env.GTM_PUBLIC_ID || 'GTM-N99ZMP6T' }
    })

    // Google Service Account JSON Ï∂îÍ∞Ä
    if (process.env.GOOGLE_SERVICE_ACCOUNT_KEY) {
      await prisma.setting.upsert({
        where: { key: 'GOOGLE_SERVICE_ACCOUNT_JSON' },
        update: { value: process.env.GOOGLE_SERVICE_ACCOUNT_KEY },
        create: { key: 'GOOGLE_SERVICE_ACCOUNT_JSON', value: process.env.GOOGLE_SERVICE_ACCOUNT_KEY }
      })
    }

    console.log('‚úÖ GTM ÏÑ§Ï†ïÏù¥ ÏÑ±Í≥µÏ†ÅÏúºÎ°ú Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§!')

    // ÏÑ§Ï†ï ÌôïÏù∏
    const settings = await prisma.setting.findMany()
    console.log('üìã ÌòÑÏû¨ Îç∞Ïù¥ÌÑ∞Î≤†Ïù¥Ïä§ ÏÑ§Ï†ï:')
    settings.forEach(setting => {
      if (setting.key === 'GOOGLE_SERVICE_ACCOUNT_JSON') {
        console.log(`  ${setting.key}: [ÏÑúÎπÑÏä§ Í≥ÑÏ†ï JSON - ${setting.value.length} characters]`)
      } else {
        console.log(`  ${setting.key}: ${setting.value}`)
      }
    })

  } catch (error) {
    console.error('‚ùå GTM ÏÑ§Ï†ï Ï∂îÍ∞Ä Ï§ë Ïò§Î•ò Î∞úÏÉù:', error)
  } finally {
    await prisma.$disconnect()
  }
}

setupGTMSettings()